root@strudel:/datto/mounts/8b78a23b6f26463298508f0c01f514f6/10-49-52-May-23-19/C#
find . -type f -print0 | xargs -0 ls -l | awk '{ n=int(log($5)/log(2)); if (n<10) { n=10; } size[n]++ } END { for (i in size) printf("%d %d\n", 2^i, size[i]) }' | sort -n | awk 'function human(x) { x[1]/=1024; if (x[1]>=1024) { x[2]++; human(x) } } { a[1]=$1; a[2]=0; human(a); printf("%3d%s: %6d\n", a[1],substr("kMGTEPYZ",a[2]+1,1),$2) }'
  1k:  84466
  2k:  32246
  4k:  21782
  8k:  67833
 16k:  14276
 32k:  10202
 64k:   8977
128k:   6717
256k:   4980
512k:   4201
  1M:   2266
  2M:   1136
  4M:    604
  8M:    219
 16M:    133
 32M:     28
 64M:     14
128M:      5
256M:      3
512M:      1
  2G:      2

qapi 1:
  1k:  51676
  2k:  11117
  4k:   8865
  8k:  22229
 16k:   9223
 32k:   7319
 64k:   6858
128k:   5008
256k:   3255
512k:   2698
  1M:   1311
  2M:    709
  4M:    473
  8M:    155
 16M:     65
 32M:     19
 64M:      4
128M:      1
256M:      1
  1G:      1
  8G:      1

-> 660 MB < 64k
-> 20 GB >= 64k

qapi 2: