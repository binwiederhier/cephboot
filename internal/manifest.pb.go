// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/manifest.proto

package internal

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Slice struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Length               int64    `protobuf:"varint,3,opt,name=Length,proto3" json:"Length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Slice) Reset()         { *m = Slice{} }
func (m *Slice) String() string { return proto.CompactTextString(m) }
func (*Slice) ProtoMessage()    {}
func (*Slice) Descriptor() ([]byte, []int) {
	return fileDescriptor_913d3d06c68f5c19, []int{0}
}

func (m *Slice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Slice.Unmarshal(m, b)
}
func (m *Slice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Slice.Marshal(b, m, deterministic)
}
func (m *Slice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Slice.Merge(m, src)
}
func (m *Slice) XXX_Size() int {
	return xxx_messageInfo_Slice.Size(m)
}
func (m *Slice) XXX_DiscardUnknown() {
	xxx_messageInfo_Slice.DiscardUnknown(m)
}

var xxx_messageInfo_Slice proto.InternalMessageInfo

func (m *Slice) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *Slice) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Slice) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type ManifestV1 struct {
	Size                 int64    `protobuf:"varint,1,opt,name=Size,proto3" json:"Size,omitempty"`
	Slices               []*Slice `protobuf:"bytes,2,rep,name=Slices,proto3" json:"Slices,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManifestV1) Reset()         { *m = ManifestV1{} }
func (m *ManifestV1) String() string { return proto.CompactTextString(m) }
func (*ManifestV1) ProtoMessage()    {}
func (*ManifestV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_913d3d06c68f5c19, []int{1}
}

func (m *ManifestV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManifestV1.Unmarshal(m, b)
}
func (m *ManifestV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManifestV1.Marshal(b, m, deterministic)
}
func (m *ManifestV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManifestV1.Merge(m, src)
}
func (m *ManifestV1) XXX_Size() int {
	return xxx_messageInfo_ManifestV1.Size(m)
}
func (m *ManifestV1) XXX_DiscardUnknown() {
	xxx_messageInfo_ManifestV1.DiscardUnknown(m)
}

var xxx_messageInfo_ManifestV1 proto.InternalMessageInfo

func (m *ManifestV1) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ManifestV1) GetSlices() []*Slice {
	if m != nil {
		return m.Slices
	}
	return nil
}

func init() {
	proto.RegisterType((*Slice)(nil), "internal.Slice")
	proto.RegisterType((*ManifestV1)(nil), "internal.ManifestV1")
}

func init() { proto.RegisterFile("internal/manifest.proto", fileDescriptor_913d3d06c68f5c19) }

var fileDescriptor_913d3d06c68f5c19 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0xcf, 0x4d, 0xcc, 0xcb, 0x4c, 0x4b, 0x2d, 0x2e, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0x49, 0x28, 0x05, 0x73, 0xb1, 0x06, 0xe7, 0x64, 0x26, 0xa7,
	0x0a, 0x49, 0x71, 0x71, 0x38, 0x67, 0xa4, 0x26, 0x67, 0x17, 0x97, 0xe6, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0xf0, 0x04, 0xc1, 0xf9, 0x42, 0x62, 0x5c, 0x6c, 0xfe, 0x69, 0x69, 0xc5, 0xa9, 0x25, 0x12,
	0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x50, 0x1e, 0x48, 0xdc, 0x27, 0x35, 0x2f, 0xbd, 0x24, 0x43,
	0x82, 0x19, 0x22, 0x0e, 0xe1, 0x29, 0x79, 0x72, 0x71, 0xf9, 0x42, 0x2d, 0x0c, 0x33, 0x14, 0x12,
	0xe2, 0x62, 0x09, 0xce, 0xac, 0x4a, 0x05, 0x9b, 0xca, 0x1c, 0x04, 0x66, 0x0b, 0xa9, 0x73, 0xb1,
	0x81, 0xad, 0x2d, 0x96, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x36, 0xe2, 0xd7, 0x83, 0xb9, 0x48, 0x0f,
	0x2c, 0x1e, 0x04, 0x95, 0x4e, 0x62, 0x03, 0x3b, 0xd8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6f,
	0xfa, 0x30, 0xaf, 0xcb, 0x00, 0x00, 0x00,
}
