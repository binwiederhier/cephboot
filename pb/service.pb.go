// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiffRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Checksums            [][]byte `protobuf:"bytes,2,rep,name=Checksums,proto3" json:"Checksums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiffRequest) Reset()         { *m = DiffRequest{} }
func (m *DiffRequest) String() string { return proto.CompactTextString(m) }
func (*DiffRequest) ProtoMessage()    {}
func (*DiffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{0}
}

func (m *DiffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiffRequest.Unmarshal(m, b)
}
func (m *DiffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiffRequest.Marshal(b, m, deterministic)
}
func (m *DiffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiffRequest.Merge(m, src)
}
func (m *DiffRequest) XXX_Size() int {
	return xxx_messageInfo_DiffRequest.Size(m)
}
func (m *DiffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiffRequest proto.InternalMessageInfo

func (m *DiffRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiffRequest) GetChecksums() [][]byte {
	if m != nil {
		return m.Checksums
	}
	return nil
}

type DiffResponse struct {
	UnknownChecksums     [][]byte `protobuf:"bytes,1,rep,name=UnknownChecksums,proto3" json:"UnknownChecksums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiffResponse) Reset()         { *m = DiffResponse{} }
func (m *DiffResponse) String() string { return proto.CompactTextString(m) }
func (*DiffResponse) ProtoMessage()    {}
func (*DiffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{1}
}

func (m *DiffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiffResponse.Unmarshal(m, b)
}
func (m *DiffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiffResponse.Marshal(b, m, deterministic)
}
func (m *DiffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiffResponse.Merge(m, src)
}
func (m *DiffResponse) XXX_Size() int {
	return xxx_messageInfo_DiffResponse.Size(m)
}
func (m *DiffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiffResponse proto.InternalMessageInfo

func (m *DiffResponse) GetUnknownChecksums() [][]byte {
	if m != nil {
		return m.UnknownChecksums
	}
	return nil
}

type WriteChunkRequest struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteChunkRequest) Reset()         { *m = WriteChunkRequest{} }
func (m *WriteChunkRequest) String() string { return proto.CompactTextString(m) }
func (*WriteChunkRequest) ProtoMessage()    {}
func (*WriteChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{2}
}

func (m *WriteChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteChunkRequest.Unmarshal(m, b)
}
func (m *WriteChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteChunkRequest.Marshal(b, m, deterministic)
}
func (m *WriteChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteChunkRequest.Merge(m, src)
}
func (m *WriteChunkRequest) XXX_Size() int {
	return xxx_messageInfo_WriteChunkRequest.Size(m)
}
func (m *WriteChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteChunkRequest proto.InternalMessageInfo

func (m *WriteChunkRequest) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *WriteChunkRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteChunkResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteChunkResponse) Reset()         { *m = WriteChunkResponse{} }
func (m *WriteChunkResponse) String() string { return proto.CompactTextString(m) }
func (*WriteChunkResponse) ProtoMessage()    {}
func (*WriteChunkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{3}
}

func (m *WriteChunkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteChunkResponse.Unmarshal(m, b)
}
func (m *WriteChunkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteChunkResponse.Marshal(b, m, deterministic)
}
func (m *WriteChunkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteChunkResponse.Merge(m, src)
}
func (m *WriteChunkResponse) XXX_Size() int {
	return xxx_messageInfo_WriteChunkResponse.Size(m)
}
func (m *WriteChunkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteChunkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteChunkResponse proto.InternalMessageInfo

type ReadChunkRequest struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Length               int64    `protobuf:"varint,3,opt,name=Length,proto3" json:"Length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadChunkRequest) Reset()         { *m = ReadChunkRequest{} }
func (m *ReadChunkRequest) String() string { return proto.CompactTextString(m) }
func (*ReadChunkRequest) ProtoMessage()    {}
func (*ReadChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{4}
}

func (m *ReadChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadChunkRequest.Unmarshal(m, b)
}
func (m *ReadChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadChunkRequest.Marshal(b, m, deterministic)
}
func (m *ReadChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadChunkRequest.Merge(m, src)
}
func (m *ReadChunkRequest) XXX_Size() int {
	return xxx_messageInfo_ReadChunkRequest.Size(m)
}
func (m *ReadChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadChunkRequest proto.InternalMessageInfo

func (m *ReadChunkRequest) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *ReadChunkRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadChunkRequest) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type ReadChunkResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadChunkResponse) Reset()         { *m = ReadChunkResponse{} }
func (m *ReadChunkResponse) String() string { return proto.CompactTextString(m) }
func (*ReadChunkResponse) ProtoMessage()    {}
func (*ReadChunkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{5}
}

func (m *ReadChunkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadChunkResponse.Unmarshal(m, b)
}
func (m *ReadChunkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadChunkResponse.Marshal(b, m, deterministic)
}
func (m *ReadChunkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadChunkResponse.Merge(m, src)
}
func (m *ReadChunkResponse) XXX_Size() int {
	return xxx_messageInfo_ReadChunkResponse.Size(m)
}
func (m *ReadChunkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadChunkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadChunkResponse proto.InternalMessageInfo

func (m *ReadChunkResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type StatChunkRequest struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatChunkRequest) Reset()         { *m = StatChunkRequest{} }
func (m *StatChunkRequest) String() string { return proto.CompactTextString(m) }
func (*StatChunkRequest) ProtoMessage()    {}
func (*StatChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{6}
}

func (m *StatChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatChunkRequest.Unmarshal(m, b)
}
func (m *StatChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatChunkRequest.Marshal(b, m, deterministic)
}
func (m *StatChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatChunkRequest.Merge(m, src)
}
func (m *StatChunkRequest) XXX_Size() int {
	return xxx_messageInfo_StatChunkRequest.Size(m)
}
func (m *StatChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatChunkRequest proto.InternalMessageInfo

func (m *StatChunkRequest) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

type StatChunkResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatChunkResponse) Reset()         { *m = StatChunkResponse{} }
func (m *StatChunkResponse) String() string { return proto.CompactTextString(m) }
func (*StatChunkResponse) ProtoMessage()    {}
func (*StatChunkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{7}
}

func (m *StatChunkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatChunkResponse.Unmarshal(m, b)
}
func (m *StatChunkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatChunkResponse.Marshal(b, m, deterministic)
}
func (m *StatChunkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatChunkResponse.Merge(m, src)
}
func (m *StatChunkResponse) XXX_Size() int {
	return xxx_messageInfo_StatChunkResponse.Size(m)
}
func (m *StatChunkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatChunkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatChunkResponse proto.InternalMessageInfo

func (m *StatChunkResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type RemoveChunkRequest struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveChunkRequest) Reset()         { *m = RemoveChunkRequest{} }
func (m *RemoveChunkRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveChunkRequest) ProtoMessage()    {}
func (*RemoveChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{8}
}

func (m *RemoveChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveChunkRequest.Unmarshal(m, b)
}
func (m *RemoveChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveChunkRequest.Marshal(b, m, deterministic)
}
func (m *RemoveChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveChunkRequest.Merge(m, src)
}
func (m *RemoveChunkRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveChunkRequest.Size(m)
}
func (m *RemoveChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveChunkRequest proto.InternalMessageInfo

func (m *RemoveChunkRequest) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

type RemoveChunkResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveChunkResponse) Reset()         { *m = RemoveChunkResponse{} }
func (m *RemoveChunkResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveChunkResponse) ProtoMessage()    {}
func (*RemoveChunkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{9}
}

func (m *RemoveChunkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveChunkResponse.Unmarshal(m, b)
}
func (m *RemoveChunkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveChunkResponse.Marshal(b, m, deterministic)
}
func (m *RemoveChunkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveChunkResponse.Merge(m, src)
}
func (m *RemoveChunkResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveChunkResponse.Size(m)
}
func (m *RemoveChunkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveChunkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveChunkResponse proto.InternalMessageInfo

type WriteManifestRequest struct {
	Id                   string      `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Manifest             *ManifestV1 `protobuf:"bytes,2,opt,name=Manifest,proto3" json:"Manifest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WriteManifestRequest) Reset()         { *m = WriteManifestRequest{} }
func (m *WriteManifestRequest) String() string { return proto.CompactTextString(m) }
func (*WriteManifestRequest) ProtoMessage()    {}
func (*WriteManifestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{10}
}

func (m *WriteManifestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteManifestRequest.Unmarshal(m, b)
}
func (m *WriteManifestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteManifestRequest.Marshal(b, m, deterministic)
}
func (m *WriteManifestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteManifestRequest.Merge(m, src)
}
func (m *WriteManifestRequest) XXX_Size() int {
	return xxx_messageInfo_WriteManifestRequest.Size(m)
}
func (m *WriteManifestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteManifestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteManifestRequest proto.InternalMessageInfo

func (m *WriteManifestRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WriteManifestRequest) GetManifest() *ManifestV1 {
	if m != nil {
		return m.Manifest
	}
	return nil
}

type WriteManifestResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteManifestResponse) Reset()         { *m = WriteManifestResponse{} }
func (m *WriteManifestResponse) String() string { return proto.CompactTextString(m) }
func (*WriteManifestResponse) ProtoMessage()    {}
func (*WriteManifestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{11}
}

func (m *WriteManifestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteManifestResponse.Unmarshal(m, b)
}
func (m *WriteManifestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteManifestResponse.Marshal(b, m, deterministic)
}
func (m *WriteManifestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteManifestResponse.Merge(m, src)
}
func (m *WriteManifestResponse) XXX_Size() int {
	return xxx_messageInfo_WriteManifestResponse.Size(m)
}
func (m *WriteManifestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteManifestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteManifestResponse proto.InternalMessageInfo

type ReadManifestRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadManifestRequest) Reset()         { *m = ReadManifestRequest{} }
func (m *ReadManifestRequest) String() string { return proto.CompactTextString(m) }
func (*ReadManifestRequest) ProtoMessage()    {}
func (*ReadManifestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{12}
}

func (m *ReadManifestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadManifestRequest.Unmarshal(m, b)
}
func (m *ReadManifestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadManifestRequest.Marshal(b, m, deterministic)
}
func (m *ReadManifestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadManifestRequest.Merge(m, src)
}
func (m *ReadManifestRequest) XXX_Size() int {
	return xxx_messageInfo_ReadManifestRequest.Size(m)
}
func (m *ReadManifestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadManifestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadManifestRequest proto.InternalMessageInfo

func (m *ReadManifestRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadManifestResponse struct {
	Manifest             *ManifestV1 `protobuf:"bytes,1,opt,name=Manifest,proto3" json:"Manifest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReadManifestResponse) Reset()         { *m = ReadManifestResponse{} }
func (m *ReadManifestResponse) String() string { return proto.CompactTextString(m) }
func (*ReadManifestResponse) ProtoMessage()    {}
func (*ReadManifestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{13}
}

func (m *ReadManifestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadManifestResponse.Unmarshal(m, b)
}
func (m *ReadManifestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadManifestResponse.Marshal(b, m, deterministic)
}
func (m *ReadManifestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadManifestResponse.Merge(m, src)
}
func (m *ReadManifestResponse) XXX_Size() int {
	return xxx_messageInfo_ReadManifestResponse.Size(m)
}
func (m *ReadManifestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadManifestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadManifestResponse proto.InternalMessageInfo

func (m *ReadManifestResponse) GetManifest() *ManifestV1 {
	if m != nil {
		return m.Manifest
	}
	return nil
}

func init() {
	proto.RegisterType((*DiffRequest)(nil), "pb.DiffRequest")
	proto.RegisterType((*DiffResponse)(nil), "pb.DiffResponse")
	proto.RegisterType((*WriteChunkRequest)(nil), "pb.WriteChunkRequest")
	proto.RegisterType((*WriteChunkResponse)(nil), "pb.WriteChunkResponse")
	proto.RegisterType((*ReadChunkRequest)(nil), "pb.ReadChunkRequest")
	proto.RegisterType((*ReadChunkResponse)(nil), "pb.ReadChunkResponse")
	proto.RegisterType((*StatChunkRequest)(nil), "pb.StatChunkRequest")
	proto.RegisterType((*StatChunkResponse)(nil), "pb.StatChunkResponse")
	proto.RegisterType((*RemoveChunkRequest)(nil), "pb.RemoveChunkRequest")
	proto.RegisterType((*RemoveChunkResponse)(nil), "pb.RemoveChunkResponse")
	proto.RegisterType((*WriteManifestRequest)(nil), "pb.WriteManifestRequest")
	proto.RegisterType((*WriteManifestResponse)(nil), "pb.WriteManifestResponse")
	proto.RegisterType((*ReadManifestRequest)(nil), "pb.ReadManifestRequest")
	proto.RegisterType((*ReadManifestResponse)(nil), "pb.ReadManifestResponse")
}

func init() { proto.RegisterFile("pb/service.proto", fileDescriptor_6ff5ab49d8a5fcc4) }

var fileDescriptor_6ff5ab49d8a5fcc4 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x25, 0xc9, 0x52, 0xda, 0xdb, 0xba, 0xa6, 0x63, 0x92, 0xc6, 0xe0, 0xc3, 0x32, 0x20, 0xae,
	0x2b, 0x64, 0x75, 0x7d, 0x11, 0x17, 0x04, 0x6d, 0x05, 0x17, 0x14, 0x61, 0x44, 0x7d, 0x13, 0x92,
	0xcd, 0xc4, 0x86, 0xd2, 0x24, 0x76, 0x26, 0xab, 0xbf, 0xc9, 0x5f, 0x29, 0x99, 0x99, 0x7c, 0x74,
	0xa2, 0x6e, 0xdf, 0x32, 0xe7, 0xde, 0x73, 0xe6, 0xcc, 0xbd, 0x87, 0x80, 0x5d, 0xc6, 0xe7, 0x8c,
	0xee, 0x6e, 0xb2, 0x6b, 0x1a, 0x96, 0xbb, 0x82, 0x17, 0xc8, 0x2c, 0xe3, 0x60, 0x5e, 0xc6, 0xe7,
	0xdb, 0x28, 0xcf, 0x52, 0xca, 0xb8, 0x84, 0xf1, 0x25, 0x4c, 0x57, 0x59, 0x9a, 0x12, 0xfa, 0xa3,
	0xa2, 0x8c, 0xa3, 0x63, 0x30, 0xaf, 0x12, 0xdf, 0x38, 0x31, 0x4e, 0x27, 0xc4, 0xbc, 0x4a, 0xd0,
	0x03, 0x98, 0x2c, 0xd7, 0xf4, 0x7a, 0xc3, 0xaa, 0x2d, 0xf3, 0xcd, 0x13, 0xeb, 0x74, 0x46, 0x3a,
	0x00, 0xbf, 0x84, 0x99, 0x24, 0xb3, 0xb2, 0xc8, 0x19, 0x45, 0x67, 0x60, 0x7f, 0xce, 0x37, 0x79,
	0xf1, 0x33, 0xef, 0x48, 0x86, 0x20, 0x0d, 0x70, 0xbc, 0x84, 0xf9, 0xd7, 0x5d, 0xc6, 0xe9, 0x72,
	0x5d, 0xe5, 0x9b, 0xe6, 0xfa, 0x00, 0xc6, 0x4d, 0x87, 0x30, 0x31, 0x23, 0xed, 0x19, 0x21, 0x38,
	0x5a, 0x45, 0x3c, 0xf2, 0x4d, 0x81, 0x8b, 0x6f, 0xec, 0x00, 0xea, 0x8b, 0x48, 0x1b, 0xf8, 0x1b,
	0xd8, 0x84, 0x46, 0xc9, 0xc1, 0xca, 0x1e, 0x8c, 0x3e, 0xa6, 0x29, 0xa3, 0x5c, 0x68, 0x5b, 0x44,
	0x9d, 0x6a, 0xfc, 0x3d, 0xcd, 0xbf, 0xf3, 0xb5, 0x6f, 0x49, 0x5c, 0x9e, 0xf0, 0x23, 0x98, 0xf7,
	0xf4, 0xd5, 0xdb, 0x1b, 0x7b, 0x46, 0xcf, 0x5e, 0x08, 0xf6, 0x27, 0x1e, 0xf1, 0x43, 0x8d, 0xe0,
	0x27, 0x30, 0xef, 0xf5, 0x2b, 0x61, 0x0f, 0x46, 0x6f, 0x7f, 0x65, 0x8c, 0x33, 0xd1, 0x3e, 0x26,
	0xea, 0x84, 0x9f, 0x02, 0x22, 0x74, 0x5b, 0xdc, 0x1c, 0x3c, 0x41, 0xec, 0xc2, 0xbd, 0x3d, 0x86,
	0x1a, 0x17, 0x01, 0x47, 0x0c, 0xf1, 0x83, 0x4a, 0xc6, 0xbf, 0xb2, 0x70, 0x06, 0xe3, 0xa6, 0x45,
	0x0c, 0x6a, 0x7a, 0x71, 0x1c, 0x96, 0x71, 0xd8, 0x60, 0x5f, 0x9e, 0x91, 0xb6, 0x8e, 0x17, 0xe0,
	0x6a, 0x9a, 0xea, 0xb2, 0x87, 0xb5, 0x87, 0x28, 0xb9, 0xe5, 0x2e, 0xfc, 0x06, 0x9c, 0xfd, 0xb6,
	0x36, 0x61, 0x9d, 0x07, 0xe3, 0xff, 0x1e, 0x2e, 0x7e, 0x5b, 0x60, 0xbd, 0xab, 0x62, 0xf4, 0x18,
	0x8e, 0xea, 0x94, 0xa2, 0xbb, 0x75, 0x67, 0x2f, 0xec, 0x81, 0xdd, 0x01, 0x4a, 0xfe, 0x12, 0xa0,
	0xcb, 0x13, 0x72, 0xeb, 0xfa, 0x20, 0xa4, 0x81, 0xa7, 0xc3, 0x8a, 0xfc, 0x02, 0x26, 0x6d, 0x2c,
	0x90, 0x53, 0x37, 0xe9, 0x29, 0x0c, 0x5c, 0x0d, 0xed, 0x98, 0xed, 0xde, 0x25, 0x53, 0x8f, 0x8d,
	0x64, 0x0e, 0xc3, 0xf1, 0x0a, 0xa6, 0xbd, 0x95, 0x22, 0x4f, 0xea, 0xeb, 0xa9, 0x08, 0x16, 0x03,
	0x5c, 0xf1, 0x57, 0x70, 0x67, 0x6f, 0x4f, 0xc8, 0x6f, 0x1f, 0xa7, 0xad, 0x28, 0xb8, 0xff, 0x97,
	0x8a, 0x52, 0x79, 0x0d, 0xb3, 0xfe, 0xb6, 0xd0, 0xa2, 0x79, 0xa6, 0xae, 0xe1, 0x0f, 0x0b, 0x52,
	0x22, 0x1e, 0x89, 0xdf, 0xd1, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x7b, 0xe4, 0x16,
	0xb9, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HubClient is the client API for Hub service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HubClient interface {
	Diff(ctx context.Context, in *DiffRequest, opts ...grpc.CallOption) (*DiffResponse, error)
	WriteChunk(ctx context.Context, in *WriteChunkRequest, opts ...grpc.CallOption) (*WriteChunkResponse, error)
	ReadChunk(ctx context.Context, in *ReadChunkRequest, opts ...grpc.CallOption) (*ReadChunkResponse, error)
	StatChunk(ctx context.Context, in *StatChunkRequest, opts ...grpc.CallOption) (*StatChunkResponse, error)
	RemoveChunk(ctx context.Context, in *RemoveChunkRequest, opts ...grpc.CallOption) (*RemoveChunkResponse, error)
	WriteManifest(ctx context.Context, in *WriteManifestRequest, opts ...grpc.CallOption) (*WriteManifestResponse, error)
	ReadManifest(ctx context.Context, in *ReadManifestRequest, opts ...grpc.CallOption) (*ReadManifestResponse, error)
}

type hubClient struct {
	cc *grpc.ClientConn
}

func NewHubClient(cc *grpc.ClientConn) HubClient {
	return &hubClient{cc}
}

func (c *hubClient) Diff(ctx context.Context, in *DiffRequest, opts ...grpc.CallOption) (*DiffResponse, error) {
	out := new(DiffResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/Diff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) WriteChunk(ctx context.Context, in *WriteChunkRequest, opts ...grpc.CallOption) (*WriteChunkResponse, error) {
	out := new(WriteChunkResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/WriteChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) ReadChunk(ctx context.Context, in *ReadChunkRequest, opts ...grpc.CallOption) (*ReadChunkResponse, error) {
	out := new(ReadChunkResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/ReadChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) StatChunk(ctx context.Context, in *StatChunkRequest, opts ...grpc.CallOption) (*StatChunkResponse, error) {
	out := new(StatChunkResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/StatChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) RemoveChunk(ctx context.Context, in *RemoveChunkRequest, opts ...grpc.CallOption) (*RemoveChunkResponse, error) {
	out := new(RemoveChunkResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/RemoveChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) WriteManifest(ctx context.Context, in *WriteManifestRequest, opts ...grpc.CallOption) (*WriteManifestResponse, error) {
	out := new(WriteManifestResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/WriteManifest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) ReadManifest(ctx context.Context, in *ReadManifestRequest, opts ...grpc.CallOption) (*ReadManifestResponse, error) {
	out := new(ReadManifestResponse)
	err := c.cc.Invoke(ctx, "/pb.Hub/ReadManifest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HubServer is the server API for Hub service.
type HubServer interface {
	Diff(context.Context, *DiffRequest) (*DiffResponse, error)
	WriteChunk(context.Context, *WriteChunkRequest) (*WriteChunkResponse, error)
	ReadChunk(context.Context, *ReadChunkRequest) (*ReadChunkResponse, error)
	StatChunk(context.Context, *StatChunkRequest) (*StatChunkResponse, error)
	RemoveChunk(context.Context, *RemoveChunkRequest) (*RemoveChunkResponse, error)
	WriteManifest(context.Context, *WriteManifestRequest) (*WriteManifestResponse, error)
	ReadManifest(context.Context, *ReadManifestRequest) (*ReadManifestResponse, error)
}

// UnimplementedHubServer can be embedded to have forward compatible implementations.
type UnimplementedHubServer struct {
}

func (*UnimplementedHubServer) Diff(ctx context.Context, req *DiffRequest) (*DiffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Diff not implemented")
}
func (*UnimplementedHubServer) WriteChunk(ctx context.Context, req *WriteChunkRequest) (*WriteChunkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteChunk not implemented")
}
func (*UnimplementedHubServer) ReadChunk(ctx context.Context, req *ReadChunkRequest) (*ReadChunkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadChunk not implemented")
}
func (*UnimplementedHubServer) StatChunk(ctx context.Context, req *StatChunkRequest) (*StatChunkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatChunk not implemented")
}
func (*UnimplementedHubServer) RemoveChunk(ctx context.Context, req *RemoveChunkRequest) (*RemoveChunkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveChunk not implemented")
}
func (*UnimplementedHubServer) WriteManifest(ctx context.Context, req *WriteManifestRequest) (*WriteManifestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteManifest not implemented")
}
func (*UnimplementedHubServer) ReadManifest(ctx context.Context, req *ReadManifestRequest) (*ReadManifestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadManifest not implemented")
}

func RegisterHubServer(s *grpc.Server, srv HubServer) {
	s.RegisterService(&_Hub_serviceDesc, srv)
}

func _Hub_Diff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Diff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/Diff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Diff(ctx, req.(*DiffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_WriteChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).WriteChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/WriteChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).WriteChunk(ctx, req.(*WriteChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_ReadChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).ReadChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/ReadChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).ReadChunk(ctx, req.(*ReadChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_StatChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).StatChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/StatChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).StatChunk(ctx, req.(*StatChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_RemoveChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).RemoveChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/RemoveChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).RemoveChunk(ctx, req.(*RemoveChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_WriteManifest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteManifestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).WriteManifest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/WriteManifest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).WriteManifest(ctx, req.(*WriteManifestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_ReadManifest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadManifestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).ReadManifest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hub/ReadManifest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).ReadManifest(ctx, req.(*ReadManifestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Hub",
	HandlerType: (*HubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Diff",
			Handler:    _Hub_Diff_Handler,
		},
		{
			MethodName: "WriteChunk",
			Handler:    _Hub_WriteChunk_Handler,
		},
		{
			MethodName: "ReadChunk",
			Handler:    _Hub_ReadChunk_Handler,
		},
		{
			MethodName: "StatChunk",
			Handler:    _Hub_StatChunk_Handler,
		},
		{
			MethodName: "RemoveChunk",
			Handler:    _Hub_RemoveChunk_Handler,
		},
		{
			MethodName: "WriteManifest",
			Handler:    _Hub_WriteManifest_Handler,
		},
		{
			MethodName: "ReadManifest",
			Handler:    _Hub_ReadManifest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/service.proto",
}
